name: 🚀 Deploy Blog to Server (Build & Upload)

on:
  push:
    branches:
      - blog
  workflow_dispatch:
    inputs:
      ref:
        description: Branch to deploy
        required: false
        default: blog

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: 📂 Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref || github.ref_name }}
          fetch-depth: 1

      # Step 2: Set up Node.js and pnpm
      - name: 📦 Set up Node.js and pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: |
            - recursive: true
              args: [--frozen-lockfile]

      # Step 3: Run linter
      - name: 🚨 Lint Code
        run: pnpm run lint

      # Step 4: Test wether build is successful
      - name: ✅ Build Project
        run: pnpm run build

      # Step 5: Pack build artifacts
      - name: 📦 Package build files
        run: |
          tar -czf build.tar.gz \
            .next \
            public \
            package.json \
            pnpm-lock.yaml \
            .node-version \
            LICENSE

      # Step 6: Upload packaged build to server
      - name: 📤 Upload build to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: build.tar.gz
          target: /data/apps/SuzuBlog/app

      # Step 7: SSH into server and run deploy script
      - name: 🛠️ SSH Run deploy.sh
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /data/apps/SuzuBlog/app
            ./deploy.sh
